1) OAuth is an open standard for authorization, that lets clients obtain access to protected server 
   resources on behalf of a resource owner. The resource owner could be a different client or the end user. 
   OAuth also helps end users authorize third-party access to their server resources without having to share 
   their credentials, such as user names and passwords. 
   There are series of articles adheres to the OAuth 2.0 authorization framework outlined in RFC6749. 
   The complete OAuth 2.0 authorization framework as outlined under RFC 6749 can be found at the Internet 
   Engineering Task Force website.
   
   There are several Implementation to build request for Oauth complaince REST API Services.
   
   a) Twitter has lot of REST service using Oauth.
   		https://apps.twitter.com/app/13537295
   		https://www.javacodegeeks.com/2012/03/twitter-api-on-your-java-application.html
   
   b) Scribe Jar to build request
   	  https://github.com/LiveEngage-Examples/LiveEngage-Engagement-History-API/blob/master/Java-EHAPI-Example/src/main/java/EngagementHistory.java
   	  https://github.com/tomekc/simple-oauth2-example/blob/master/java-client/src/main/java/tomek/MyApiService.java
   		
   c) IBM Library : https://www.ibm.com/developerworks/library/se-oauthjavapt2/
   
   d) Google API: http://blog.takipi.com/tutorial-how-to-implement-java-oauth-2-0-to-sign-in-with-github-and-google/
   
 2) What is a good approach to verify XML response from RESTful service in Java?

	Approach to handle JSON and xml Response is below link
    http://stackoverflow.com/questions/34432343/what-is-a-good-approach-to-verify-xml-response-from-restful-service-in-java
    
    
   
   
 